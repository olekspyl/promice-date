{"mappings":"gfAAA,IAWIA,EACAC,EACAC,EAbJC,EAAAC,EAAA,SAEMC,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,UAAWF,SAASC,cAAc,sBAClCE,YAAaH,SAASC,cAAc,wBACpCG,OAAQJ,SAASC,cAAc,UAmCjC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,SAEpBG,EAAO,CAAEJ,WAAUC,Q,GAEpBD,EAAWC,E,IAzClBT,EAAKM,OAAOU,iBAAiB,UAM7B,SAASC,EAAeC,GACtBA,EAAEC,iBACF,IAAgCC,EAAAF,EAAEG,cAAcC,SAAxCC,EAAwBH,EAAxBG,MAAOC,EAAiBJ,EAAjBI,OAAQC,EAASL,EAATX,KACvBd,EAAc8B,EAAKC,cACnB9B,EAAe2B,EAAMG,cACrB7B,EAAgB2B,EAAOE,cAEvB,IAAK,IAAIC,EAAI,EAAGA,GAAK9B,EAAe8B,GAAK,EAClC/B,IACHD,GAAeA,GAIjBY,EAAcoB,EAFd/B,GAAgBD,GAGbiC,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAIoB,EAAJpB,KACjBX,EAAAgC,OAAOC,QAAQ,uBAAwCC,OAAfxB,EAAS,QAAWwB,OAALvB,EAAK,M,IAE7DwB,OAAM,SAAAJ,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAIoB,EAAJpB,KAClBX,EAAAgC,OAAOI,QAAQ,sBAAqCF,OAAfxB,EAAS,QAAWwB,OAALvB,EAAK,M,IAI/DT,EAAKM,OAAO6B,oBAAoB,SAAUlB,GAC1CjB,EAAKM,OAAO8B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n  formEl: document.querySelector('.form'),\n};\n\nrefs.formEl.addEventListener('submit', onFormElSubmit);\n\nlet promiseStep;\nlet promiseDelay;\nlet promiseAmount;\n\nfunction onFormElSubmit(e) {\n  e.preventDefault();\n  const { delay, amount, step } = e.currentTarget.elements;\n  promiseStep = step.valueAsNumber;\n  promiseDelay = delay.valueAsNumber;\n  promiseAmount = amount.valueAsNumber;\n\n  for (let i = 1; i <= promiseAmount; i += 1) {\n    if (!promiseDelay) {\n      promiseStep += promiseStep;\n    }\n    promiseDelay += promiseStep;\n\n    createPromise(i, promiseDelay)\n      .then(({ position, step }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${step}ms`);\n      })\n      .catch(({ position, step }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${step}ms`);\n      });\n  }\n\n  refs.formEl.removeEventListener('submit', onFormElSubmit);\n  refs.formEl.reset();\n}\n\nfunction createPromise(position, step) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, step });\n      } else {\n        reject({ position, step });\n      }\n    }, position * step);\n  });\n}\n"],"names":["$ce04d3a99e08e73b$var$promiseStep","$ce04d3a99e08e73b$var$promiseDelay","$ce04d3a99e08e73b$var$promiseAmount","$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","inputDelay","document","querySelector","inputStep","inputAmount","formEl","$ce04d3a99e08e73b$var$createPromise","position","step","Promise","resolve","reject","setTimeout","Math","random","addEventListener","$ce04d3a99e08e73b$var$onFormElSubmit","e","preventDefault","_elements","currentTarget","elements","delay","amount","step1","valueAsNumber","i","then","param","Notify","success","concat","catch","failure","removeEventListener","reset"],"version":3,"file":"03-promises.9261b100.js.map"}